name: Release
on:
  push:
    branches:
    - master

jobs:
  changelog:
    if: github.repository == 'Traenqui/python-template'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Create a temporary, uniquely named branch to push release info to
      - name: create temporary branch
        run: git branch "release-from-${{ github.sha }}" "${{ github.sha }}"

      - name: switch to new branch
        run: git checkout release-from-${{ github.sha }}

      - name: get-package-version
        id: package-version
        run: |
          LF_VERSION=$(grep '^version =' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "current-version=$LF_VERSION" >> "$GITHUB_OUTPUT"

     # create release info and push it upstream
      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          #version-file: './package.json,./package-lock.json,./src/config/app.json'
          version-file: './pyproject.toml'
          git-branch: 'release-from-${{ github.sha }}'
          skip-git-pull: true

      # create PR using GitHub CLI
      - name: create PR with release info
        if: steps.changelog.outputs.skipped == 'false'
        id: create-pr
        run: gh pr create --base master --head release-from-${{ github.sha }} --title 'Merge new release into main' --body 'Created by Github action'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # merge PR using GitHub CLI
      - name: merge PR with release info
        if: steps.changelog.outputs.skipped == 'false'
        id: merge-pr
        run: gh pr merge --admin --merge --subject 'Merge release info' --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # release info is now in main so we can continue as before
      - name: create release with last commit
        if: steps.changelog.outputs.skipped == 'false'
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.CHANGELOG_RELEASE }}
          tag: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          
